{
  "timestamp": 1752222437847,
  "data": "---\ntags:\n  - core\n  - form\n  - field\n  - autocomplete\n  - autosuggest\n  - suggestions\n  - combobox\n  - select\n  - multiselect\n  - search\n  - input\ntitle: Typeahead Multi-Select\ndescription: >-\n  Helps users quickly find and select the right values from a large set of options.\nrelatedPages:\n  - /components/input/\n  - /components/select/\n  - /components/multi-select/\n  - /guidelines/forms/\n---\n\nimport TypeaheadMultiSelectDemo from \"./_components/TypeaheadMultiSelectDemo.vue\";\n\n<TypeaheadMultiSelectDemo client:only=\"vue\" />\n\n\n## Best practice\n- Use Typeahead Multi-Select in cases where the user can select multiple options from a large data set.\n- For shorter and simpler lists, consider using the <PageLink path=\"/components/multi-select/\">Multi-Select</PageLink> component.\n- Account for common misspellings and typos to assist users with finding the relevant results.\n- Use usage data to help rank relevant results for the user in the future.\n- If data shows that the users repeatedly use the same search queries, then expose the recent searches.\n- For info on label, placeholder, help and error text – see the <PageLink path=\"/components/input/\">Input Component</PageLink> best practice. \n\n<br />\n\n<Notification appearance=\"info\" heading=\"Difference between Typeahead Multi-Select and Search in Multi-Select\">\nBoth components allow users to search and select multiple options from a list, but they serve different use cases and user behaviours. Read about the differences in the <PageLink path=\"/guidelines/selection-components\">Selection Components Guidelines</PageLink>.\n</Notification>\n\n## Usage\nTypeahead Multi-Select is best used when you want to assist people in finding specific information from a large set of data. The autosuggestions assist the typing process and help people narrow down the available options. \n\n<Example \n  imageSrc=\"./_images/typeahead-multi-select.svg\"\n  caption=\"When the user starts typing the options that matches what is entered is displayed below in a dropdown list.\"\n/>\n\n### Recent searches\nIt is possible to display a list of recent search queries when the user clicks into the input, before the user starts typing. This is valuable in cases where you know, based on usage data, that the users repeatedly use the same search queries.\n\n<Example \n  imageSrc=\"./_images/typeahead-multi-select-recent-searches.svg\"\n  caption=\"Recent searches are be display when the user click into the input.\"\n/>\n\n### No suggestions found\nIn cases where there is no matching value in the data set to the typed search query, the typeahead returns “No suggestions found”. The user can, of course, quickly modify the query and get another result. \n\n<Example \n  imageSrc=\"./_images/typeahead-multi-select-no-suggestions.svg\"\n  caption=\"No suggestions found is return when there is no match between what is typed and the list of options.\"\n/>\n\n## Tags\nThe selected options are displayed as tags below the input. This way the user can easily see which options that has already been selected. When the user has selected more than 2 options, then a “Clear all” button is shown after the tags. This makes it easy for the user to remove the selected options e.g. in a filtering scenario where you quickly want to reset the filters.\n\n<Example \n  imageSrc=\"./_images/typeahead-multi-select-tags.svg\"\n  caption=\"Selected options are added as tags below the input.\"\n/>\n\n### Free text tagging\nIn code you can also enable free text tagging, which makes it possible for the user to create their own tags not just selecting from existing options. This can be used in cases where user-generated metadata is needed e.g. custom labels, tags for articles or blog posts.  \n\n<Example \n  imageSrc=\"./_images/typeahead-multi-select-free-text-tagging.svg\"\n  caption=\"Enabling the freetexttagging property allows users to add their own tags, as well as choose from the list of options.\"\n/>"
}