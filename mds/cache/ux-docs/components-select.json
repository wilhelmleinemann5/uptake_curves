{
  "timestamp": 1752222433855,
  "data": "---\ntags:\n  - core\n  - dropdown\n  - form\n  - field\n  - menu\ntitle: Select\ndescription: >-\n  A Select allows users to choose one option from a list of options.\nrenderAllChildPagesAsTabs: true\n---\n\nimport SelectDemo from \"./_components/SelectDemo.vue\";\n\n<SelectDemo client:only=\"vue\" />\n\n## Best practice\n\n- Use a Select to select one option from a long list of mutually exclusive options.\n- The Select field and the options popover should have the same width.\n- When grouping options, ensure the groups are logical and helpful to the user.\n- The label should describe what the user is selecting. Check the <PageLink path=\"/content/labels\">Label Guidelines</PageLink>.\n- Use the help text to provide additional context and explanation.\n- Use <PageLink path=\"/components/radio\">Radio Buttons</PageLink>, if there are six options or fewer, unless it negatively impacts the UI layout.\n- If there are more than 10-15 options, then activate the search functionality. \n- Use the <PageLink path=\"/components/typeahead\">Typeahead</PageLink>, instead, if the list of options is very long.\n\n## Implementations\n\nThe Maersk Design System offers two single-select components, \"Select\" and \"Select Native\". \n\nWe recommend using the Select whenever possible, as it increases visual consistency and behaviour across browsers. \n\n<Grid2Cols>\n  <Example\n    imageSrc=\"./_images/implementations-1.svg\"\n  >\n    <ul slot=\"caption\">\n      <li>Options are visually aligned with the MDS themes and rendered consistently across browsers.</li>\n      <li>Greater flexibility with option group headers and dividers supported.</li>\n      <li>Rendered using `<mc-select />`. </li>\n    </ul>\n  </Example>\n  <Example\n    imageSrc=\"./_images/implementations-2.svg\"\n  >\n    <ul slot=\"caption\">\n      <li>Options are rendered natively by the browser</li>\n      <li>Options are not visually aligned with the MDS themes and maybe rendered differently across browsers.</li>\n      <li>Rendered using `<mc-native-select />`. </li>\n    </ul>\n  </Example>\n</Grid2Cols>\n\n## Search\nIn cases where the list of options is longer than 10-15, it is recommended to activate the search functionality in the drop-down list. The longer the list the more difficult it becomes for the user to scan the options, but already when the list is between 10-15 options, the ability scan slows down. A search can in these cases be a great way to speed up the process of finding the right option.\n\n<Example \n  imageSrc=\"./_images/select-search.svg\"\n  caption=\"Use the search to filter the list of options.\"\n/>\n\n<Notification appearance=\"info\" heading=\"Difference between Search in Select and Typeahead\">\nBoth components allow users to search and select an option from a list, but they serve different use cases and user behaviour. Read about the difference in the <PageLink path=\"/guidelines/selection-components\">Selection Components Guidelines</PageLink>.\n</Notification>\n\n\n## Grouping options\n\nThe Select allows for grouping the selectable options. You can use headlines and horizontal dividers to group selectable options. These groups will give users a more logical browsing experience and better scannability.\n\n<Grid2Cols>\n  <Example \n    imageSrc=\"./_images/grouping-1.svg\"\n    caption=\"Grouping with headlines only.\" \n  />\n  <Example \n    imageSrc=\"./_images/grouping-2.svg\"\n    caption=\"Grouping with headlines and horizontal dividers.\" \n  />\n</Grid2Cols>\n\n## Clearing a selection\n\nThe Select offers two ways of clearing an already-made selection. The default way displays an additional selectable option on top of the list that removes the selection and returns the Select input to its default preselected state.\n\nThe alternative way displays an icon action in the input field. It allows users to interact with it by clicking, touching, or using the backspace key on the keyboard to remove an existing selection.  \n\n<Grid2Cols>\n  <Example \n    imageSrc=\"./_images/clearing-1.svg\"\n    caption=\"The default select clear pattern is well recognised and suitable in any context, including high-density interface and long forms.\"  \n  />\n  <Example \n    imageSrc=\"./_images/clearing-2.svg\"\n    caption=\"Use a clear button only for short forms or single fields. Otherwise, it will increase visual noise, which could increase cognitive load. \" \n  />\n</Grid2Cols>\n\n\n## Label\n\nBy default, the component has a top-positioned label. It is possible to change the position of the label to be left-positioned. We recommend that you use the top-positioned labels wherever possible, especially in forms. You can read more about why we recommend top-positioned labels in our <PageLink path=\"/guidelines/forms/#label-positioning\">Form Guidelines</PageLink>.\n\nFor information on how to write good and consistent labels - see our <PageLink path=\"/content/labels/#form-field-labels\">Label Guidelines</PageLink>.\n\n\n## Hint text & error state\n\nPlease see the <PageLink path=\"/components/input\">Input component</PageLink> for details on <PageLink path=\"/components/input#hint-text\">Hint Text</PageLink> and <PageLink path=\"/components/input#error-state\">Error State</PageLink>.\n\n\n## Vanity variant\n\nThe component supports the \"vanity\" style variant. \n\nPlease read more about this variant in our <PageLink path=\"/guidelines/forms#vanity-field-variant\">Form Guidelines</PageLink>.\n"
}