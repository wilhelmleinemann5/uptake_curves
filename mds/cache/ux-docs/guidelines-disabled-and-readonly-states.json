{
  "timestamp": 1752222486907,
  "data": "---\ntitle: Disabled and readonly states\ndescription: Differences between disabled & readonly and when to use which.\n---\n\n<Notification>\nWe recommend that you only use disabled and readonly state when UI components are in an intermediate state e.g. when a system dependency or any prerequisites exist. Never as a default state. \n\nFor example, do not disabled the submit button in a form per default, but could be done after the user has clicked the button, so that we avoid the form being submitted multiple times.\n\nIn most cases, use the component in the enabled state, so that people can interact with them and get their job done.\n</Notification>\n\n\n## Difference between disabled and readonly \n\nWhere enabled/disabled state specifies if a UI component allows user interaction or not, then readonly specifies, if the user can edit the value or not.\n\nFor example, the user can still select and copy the value/text of a readonly component, but cannot change the value. Readonly components are focusable and screen readers can still read the value.  \n\nA disabled component is entirely disabled. This means that it is not focusable and is therefore also not accessible for screen readers and will not be submitted in a form.\n\n<Grid2Cols>\n  <Example\n    imageSrc=\"./_images/disabled.svg\"\n  />\n  <Example\n    imageSrc=\"./_images/readonly.svg\"\n  />\n</Grid2Cols>\n\n## Components supporting disabled / readonly states  \n\n|                |Disabled state supported   | Readonly state supported   |\n|----------------|---------------------------|----------------------------|\n| Button         | Yes                       | n/a                        |\n| Checkbox       | Yes                       | n/a                        |\n| Input          | Yes                       | Yes                        |\n| Input date     | Yes                       | Yes                        |\n| Input time     | Yes                       | Yes                        |\n| Multi-select   | Yes                       | n/a                        |\n| Number stepper | Yes                       | Yes                        |\n| Radio          | Yes                       | n/a                        |\n| Select         | Yes                       | n/a                        |\n| Switch         | Yes                       | n/a                        |\n| Textarea       | Yes                       | Coming soon                |\n\n\n## Disabled state \n\nThe disabled state communicates to the user that a component exists, but that it is currently unavailable. For example, the submit button can be disabled after the user has clicked the button this way we prevent the form from being submitted multiple times. Read more about forms in our form guidelines.\n \nIn most cases, we should use the enabled state of the components, so that people can interact with them and get their job done. However, a component can be disabled for a certain amount of time e.g. if a system dependency exists or due to pre-requisites. In these cases, it is important to still show the component and let the user know it exists.\n\nIn disabled state:\n\n- No interaction with the component is possible\n- The component will not have a tab stop\n- The component will not be focusable\n- The value cannot be submitted in a form\n\n<Grid2Cols>\n  <Example\n    imageSrc=\"./_images/disabled-enabled-1.svg\"\n  />\n  <Example\n    imageSrc=\"./_images/disabled-enabled-2.svg\"\n  />\n</Grid2Cols>\n\n## Readonly state\n\nUse the readonly state, in cases where you want the user to be able to see and copy the entered values, but not be able to edit them. A common use case is system settings where a user might not have the right to change certain settings but should still be able to see what has been applied. Using readonly inputs makes it possible for screen readers to read them.\n\nIn readonly state: \n\n- The input will have a tab stop\n- The input will be focusable\n- The input is readable by screen readers\n- The input can be submitted in a form\n"
}