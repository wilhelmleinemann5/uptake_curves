{
  "timestamp": 1752222438076,
  "data": "---\ntags:\n  - core\n  - form\n  - field\n  - autocomplete\n  - autosuggest\n  - suggestions\n  - combobox\n  - select\n  - multiselect\n  - search\n  - input\ntitle: Typeahead\ndescription: >-\n  Helps the user to quickly find and select a value from a long list of options.\nrelatedPages:\n  - /components/input/\n  - /components/select/\n  - /components/multi-select/\n  - /guidelines/forms/\n---\n\nimport TypeaheadDemo from \"./_components/TypeaheadDemo.vue\";\n\n<TypeaheadDemo client:only=\"vue\" />\n\n## Best practice\n\n- Follow the best practice from the <PageLink path=\"/components/input/\">Input component</PageLink>.\n- Use the label and help text to guide people on how to find the relevant results.\n- Use typeahead when you have a long list of selectable values. (e.g. finding a location) For short and simpler lists consider using <PageLink path=\"/components/select/\">Select</PageLink> and <PageLink path=\"/components/multi-select/\">Multi-Select</PageLink> components.\n- Present recent search queries in zero states before the user has started typing in the query.\n- Always provide a way for users to clear the selected option(s).\n- Whenever possible account for common misspellings and typos to assist further the users with finding the relevant results.\n- Whenever possible use usage data to help rank relevant results for the user in the future.\n- We recommend reading the <PageLink path=\"/guidelines/forms\">Forms</PageLink> and <PageLink path=\"/content/labels\">Label</PageLink> Guidelines.\n\n<br />\n\n<Notification appearance=\"info\" heading=\"Difference between Typeahead and Search in Select\">\nBoth components allow users to search and select an option from a list, but they serve different use cases and user behaviour. Read about the difference in the <PageLink path=\"/guidelines/selection-components\">Selection Components Guidelines</PageLink>.\n</Notification>\n\n\n## Usage\n\nTypeahead is best used when input accuracy and standardisation are important, and you want to assist people in finding specific information from a large set of data. The autosuggestions assist the input process and help people narrow down the available information until a final selection can be made.\n\n### Supplementary information and grouping\n\nUse secondary text under the main value in the options list to provide further context for people. It is helpful when the main displayed values might be called the same and you want to avoid having very long descriptions for each value.\n\n<Example\n  imageSrc=\"./_images/supplementary-information.svg\"\n/>\n\nGrouping the available options in a logical way can provide additional context when users are browsing the dropdown list if only a partial query is entered.\n\n<Example\n  imageSrc=\"./_images/grouping.svg\"\n/>\n\n## Label\n\nBy default, the component has a top-positioned label. It is possible to change the position of the label to be left-positioned. We recommend that you use the top-positioned labels wherever possible, especially in forms. You can read more about why we recommend top-positioned labels in our <PageLink path=\"/guidelines/forms/#label-positioning\">form guidelines</PageLink>.\n\nFor information on how to write good and consistent labels - see our <PageLink path=\"/content/labels/#form-field-labels\">Label Guidelines</PageLink>.\n\n## Hint text & error state\n\nPlease see the <PageLink path=\"/components/input\">Input component</PageLink> for details on <PageLink path=\"/components/input#hint-text\">hint text</PageLink> and <PageLink path=\"/components/input#error-state\">error state</PageLink>.\n\n## Vanity variant\n\nThe component supports the \"vanity\" style variant. \n\nPlease read more about this variant on our <PageLink path=\"/guidelines/forms#vanity-field-variant\">form guidelines page</PageLink>.\n"
}