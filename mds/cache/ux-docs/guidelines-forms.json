{
  "timestamp": 1752222487165,
  "data": "---\ntitle: Forms\ndescription: Form design is an essential part of a user's digital experience.\ntags:\n  - core\n  - input labels\n  - optional\n  - required\n  - field width\n  - validation\n  - vanity\n---\n\nThe design of a form significantly impacts how easily a user can complete a form and how satisfied the user is with the overall experience.\n\nThe following is a short guide on what to consider when designing forms for any digital product in Maersk. Whether you are a designer or a developer, these overall guidelines will enable you to create powerful forms, that are highly accessible and fast to fill out.\n\nIf you find something in these guidelines that you don't understand or if you have any suggestions for improvements, then please <PageLink path=\"/about/the-team/\">reach out</PageLink> to us.\n\n## Only ask what is necessary.\n\nTry to reduce the length of a form by only asking for what is necessary for a user to perform the needed action, e.g. creating a customer account or placing a booking.\n\nBe aware that the longer the form is, the more difficult it becomes for the user to fill out, so keep forms short.\n\n### Only add a question to a form if you know:\n\n- That you need the information to deliver the service.\n- Why you need the information.\n- What you will do with the information.\n- Which users need to give you the information.\n- How you will check the information is accurate.\n- How to keep the information up to date and secure.\n\n## Input labels\n\nWhen writing input labels, only use natural language. Make it as easy as possible for the user to understand what is being asked of them. Maintain consistent capitalisation throughout your form.\n\n## Optional and required fields\n\nAs a golden rule, you should only mark optional fields, because in most cases the majority of fields will be required.\n\n<Grid2Cols>\n  <Example\n    imageSrc=\"./_images/optional-and-required-do.svg\"\n    indicator=\"success\"\n  />\n  <Example\n    imageSrc=\"./_images/optional-and-required-dont.svg\"\n    indicator=\"error\"\n  />\n</Grid2Cols>\n\n### Best practice:\n\n- Place the indicator on the same line as the label: e.g. phone number (optional)\n- If all fields are required, do not use any indicator. Do not mark all required.\n- Only mark required fields if a form contains a lot of fields where only a few are required.\n- Always challenge if the optional fields are necessary. If not, remove them.\n\n## Clear path to completion\n\nOne of the basic form design principles is to achieve a \"clear path to completion\". A clear path to completion ensures that the structure of a form is such that makes it easy for the user to scan a form and to understand where it starts, what it includes and where it ends.\n\nA clear path to completion can be achieved by structuring the form in a way to create a clear scan line. If the scan line is scattered, the user will have difficulty getting an overview of the form and will have to invest more time in understanding the purpose and what is required from them.\n\n<Grid2Cols>\n  <Example\n    imageSrc=\"./_images/clear-path-to-completion-do.svg\"\n    indicator=\"success\"\n  />\n  <Example\n    imageSrc=\"./_images/clear-path-to-completion-dont-1.svg\"\n    indicator=\"error\"\n  />\n</Grid2Cols>\n\nScattered scan lines demand more eye fixations which in turn will increase the time for a user to fixate their eye on the right area of the form.\n\nWe recommend that you always use a 1-column layout for your forms. A 1-column layout supports the goal of creating a clear path to completion and is easier and faster for users to fill out. Below is an example of a 2-column form and the problems with these forms.\n\n<Example\n  imageSrc=\"./_images/clear-path-to-completion-dont-2.svg\"\n  indicator=\"error\"\n/>\n\n### Best practice\n\n- Make sure to illuminate a clear path to completion with a clear scan line.\n- For payment and registration flows try to remove distractions and links that might lead to the user bouncing.\n\n## Tabbing\n\nMany users use the Tab key to navigate and fill out forms. It is essential to support this user interaction pattern.\n\nWhen testing the \"tabbing experience\", it is important that it follows the intended path and does not \"jump\" around the form. The tab sequence can be adjusted using the \"tabindex\" attribute in HTML.\n\n## Grouping\n\nOften it makes sense to organise the form elements into meaningful groups and in some cases to distribute groups across multiple pages. This is especially true if a form is long with very distinct sections. Reduce visual artefacts used to communicate meaningful relationships between elements, e.g. separator lines etc.\n\nUse headlines and the success spacing to signal that a new section is starting.\n\n- Start each form with the main headline - be descriptive.\n- Add \"group headlines\" to describe a group of form controls and inputs.\n- Place form actions at the bottom of the page. Read the section \"Actions (button)\" for more info on placement.\n\nUse fieldset and legend to group form elements.\n\nThe <PageLink path=\"/components/checkbox/\">Checkbox Group</PageLink>, <PageLink path=\"/components/radio/\">Radio Group</PageLink> and <PageLink path=\"/components/switch/\">Switch Group</PageLink> components provide a legend property to a group a series of options.\n\n<Grid3Cols>\n  <Example\n    imageSrc=\"./_images/grouping-1.svg\"\n  />\n  <Example\n    imageSrc=\"./_images/grouping-2.svg\"\n  />\n  <Example\n    imageSrc=\"./_images/grouping-3.svg\"\n  />\n</Grid3Cols>\n\nIn some cases, it makes sense to place form fields next to each other to form common formats e.g. address and credit card format. Also, use the `<fieldset>` tag to group form inputs that are related and give the group a headline using the `<legend>`.\n\n<Example\n  imageSrc=\"./_images/grouping-4.svg\"\n/>\n\n## Spacing\n\nUse the design system's <PageLink path=\"/design-language/spacing/\">\"4px spacing\"</PageLink> recommendation to ensure that elements on a form are spaced with some visual consistency and the space between elements is divisible by four e.g. 4px, 8px, 16px, 20px etc.\n\nThe exact spacing required is variable and related to a number of factors such as the length and complexity of the form.\n\n## Label positioning\n\nAs default, the form input components have top-positioned labels, but you can change the position of the labels to be left-positioned as well. We recommend that you use top-positioned labels wherever possible.\n\n<Grid2Cols>\n  <Example\n    imageSrc=\"./_images/label-positioning-do.svg\"\n    indicator=\"success\"\n  />\n  <Example\n    imageSrc=\"./_images/label-positioning-warning.svg\"\n    indicator=\"warning\"\n  />\n</Grid2Cols>\n\n### Reasons why top-positioned labels work best:\n\n- Easier for the user to understand each input by reducing eye fixations to a single eye movement.\n- Faster completion times.\n- Works well on different screen sizes and especially on smartphone\n- Works well with different content lengths e.g. long labels\n- Works best on field zoom (On field zoom, left-positioned labels might not be readable).\n\n## Field width\n\nAlways adjust the field width to match the expected value.\n\nThe width of a field provides valuable affordance by indicating the length and sometimes the format of a proper answer.\n\nIf a field is short, then the user will try to find an answer that fits that width. If a field's width does not match the length of the expected value, then the user will be confused about the answer and may try to adjust their response to fit the width of the field.\n\n<Grid2Cols>\n  <Example\n    imageSrc=\"./_images/field-width-do.svg\"\n    indicator=\"success\"\n  />\n  <Example\n    imageSrc=\"./_images/field-width-dont.svg\"\n    indicator=\"error\"\n  />\n</Grid2Cols>\n\n\n### Best practice\n\n- Use the width of form fields to indicate the “format” of a proper answer.\n- Make sure that the form fields are long enough.\n- Do not use the same width for all form fields.\n- The width of different fields should make sense e.g. email is longer than first name.\n\n## Actions (buttons)\n\nIn most cases, there are two types of form actions - primary and secondary actions. Primary actions are the actions that are used to move forward or complete the form, e.g. \"Next\" and \"Submit\".\n\nSecondary actions, e.g. \"Back\" and \"Cancel\" are less important and should be less visually prominent than primary actions.\n\nIt is recommended to use the \"Filled\" button variants for primary actions and \"Outlined\" or \"Plain\" button variants for secondary actions depending on the importance of the secondary action. If less important or not recommended action, then use the \"Plain\" button variants.\n\nYou might also need a tertiary action. In such cases use the following button combination to ensure a clear hierarchy:\n\n- Primary action: Use the \"Filled\" button variants\n- Secondary action: Use the \"Outlined\" button variants\n- Tertiary: Use the \"Plain\" button variants\n\n<Example\n  imageSrc=\"./_images/actions.svg\"\n/>\n\n<Notification>\nWe also recommend that you <PageLink path=\"/components/button/\">read our buttons guidelines</PageLink> for more in-depth information on button variants, hierarchy and combinations.\n</Notification>\n\n### Placement\n\nAlign the primary action button to the left, so that it is aligned with the rest of the form. Tabbing through the form will lead the user to the primary action first, which creates a linear and clear path to completion.\n\nPlace the secondary action buttons adjacent and to the right of the primary action button.\n\n<Grid2Cols>\n  <Example\n    imageSrc=\"./_images/placement-do.svg\"\n    indicator=\"success\"\n  />\n  <Example\n    imageSrc=\"./_images/placement-dont.svg\"\n    indicator=\"error\"\n  />\n</Grid2Cols>\n\n### Best practice:\n\n- Ensure clear visual distinction between primary, secondary and tertiary actions.\n- Align the primary action to the left so that it aligns with the rest of the form.\n- Place the secondary action next to the primary on the right side.\n- If you have a tertiary action, then place it next to the secondary on the right side.\n- Do not use call-to-action labels that are ambiguous or open to interpretation - be explicit.\n- Never hide or disable the primary action.\n- Communicate clearly when a form is being processed to avoid duplicate submissions.\n\n## Legal requirements\n\nOften a form will include legal requirements that a user must agree to before she/he can proceed.\n\n<Example\n  imageSrc=\"./_images/legal-requirements-1.svg\"\n/>\n\nDepending on the legal requirements in question, it might be possible to combine the primary action with agreeing to the legal conditions and thereby reducing the choices the user has to make.\n\n<Notification appearance=\"warning\">\nPlease do consult with the legal department whether or not it is possible to streamline the legal requirements by combining the primary action with agreeing to the legal conditions - or if we do in fact need an explicit opt-in from the user.\n</Notification>\n\n<Example\n  imageSrc=\"./_images/legal-requirements-2.svg\"\n/>\n\n## Validation - error & success\n\nPlease read our <PageLink path=\"/content/error-messages\">error messages guidelines</PageLink> when providing feedback to users on invalid entries.\n\n### Success messages\n\nAlways inform the user when they have submitted the form successfully and accomplished their task by displaying a success message.\n\nSuccess messages should be displayed prominently at the top of the page.\n\n### Best practice:\n\n- Place success messages on top of the page.\n- Clearly describe that the form has been completed. successfully.\n- Never create a dead-end success page, but provide clear and helpful next steps.\n\n## Vanity field variant\n\nThe design system supports a \"vanity\" style variant for many input / select based components. This variant removes the box surrounding the input/select component and substitues it with an underline.\n\nThis variant should only be used for very short forms e.g. two inputs in our action card. For longer forms please use the default variant.\n\n<Example\n  imageSrc=\"./_images/vanity.svg\"\n  caption=\"Example of the input component with the vanity variant applied.\"\n/>\n\n## Help\n\nWhere possible, provide help in the context of the question asked, for example:\n\n- When asked for unfamiliar data e.g. using industry-specific terms.\n- When the user may question why particular information is requested.\n- When the user does not know where to find information that is being requested in the form.\n\n\n### There are different ways to provide help:\n\n- <PageLink path=\"/components/input/#hint-text\">Hint text</PageLink>: adding additional help text underneath the label to provide more context.\n- <PageLink path=\"/guidelines/input-masks\">Input mask</PageLink>: when the required input is in a specific and standardised format. \n- Automatic inline exposure: when in focus the hint text is displayed.\n- User-activated inline exposure: e.g. the user can activate help by clicking a question mark icon.\n\n<Example\n  imageSrc=\"./_images/hint-text.svg\"\n/>\n\nIn most cases adding a hint text will be sufficient.\n\n### Best practice:\n\n- Minimise the amount of help and tips required to fill out a form.\n- Avoid making the form more complex by adding help.\n  Always try to provide help in the context\n- When providing help, always ensure it is within context.\n\n## Selection dependent inputs\n\nSometimes an initial data input requires or enables additional inputs. For example, more options become available or further clarification is required based on the initial response given by the user.\n\nThese additional inputs are called \"Selection dependent inputs\".\n\n### Radio buttons\n\nIf you only have 2-3 selection-dependent inputs for each initial option, then use radio buttons.\n\n<Example\n  imageSrc=\"./_images/selection-dependent-inputs-1.svg\"\n/>\n\n### Select boxes / dropdowns\n\nIf you have more than 3 selection-dependent inputs for each initial option, then use a dropdown/select and group the selection dependent inputs visually, so it is clear that they belong to the initial section made in the dropdown.\n\n<Example\n  imageSrc=\"./_images/selection-dependent-inputs-2.svg\"\n/>\n\n### Best practice:\n\n- Maintain a clear relationship between initial selection and the selection dependent inputs.\n- Minimise \"jumping\" of the page when exposing the selection-dependent inputs, since this can create confusion - especially on mobile.\n"
}