@import '@maersk-global/mds-foundations/scss/mixins/_typography.scss';
@import '@maersk-global/mds-foundations/scss/mixins/_glow.scss';
@import '@maersk-global/mds-foundations/scss/mixins/_pointer-events.scss';
@import './mc-button.mixins.scss';

:host {
  --mds_core_button_small_icon_height: 20px;
  --mds_core_button_small_icon_width: 20px;
  --mds_core_button_medium_icon_height: 24px;
  --mds_core_button_medium_icon_width: 24px;
  --mds_core_button_large_icon_height: 24px;
  --mds_core_button_large_icon_width: 24px;

  display: inline-block;
}

:host([width='full-width']) {
  width: 100%;

  .mc-button,
  .mc-text-and-icon {
    width: 100%;
  }
}

:host([loading]) {
  @include mds-prevent-pointer-events-if-disabled();
}

::slotted(a) {
  text-decoration: none !important;
  display: inline-block !important;
  position: relative !important;
  z-index: 1 !important;
}

:host([icon]) {
  .mc-button {
    &.small {
      @include apply-slot-icon-fit('small', 'icon');
    }

    &.medium {
      @include apply-slot-icon-fit('medium', 'icon');
    }

    &.large {
      @include apply-slot-icon-fit('large', 'icon');
    }
  }
}

:host([trailingicon]) {
  .mc-button {
    &.small {
      @include apply-slot-icon-fit('small', 'trailingicon');
    }

    &.medium {
      @include apply-slot-icon-fit('medium', 'trailingicon');
    }

    &.large {
      @include apply-slot-icon-fit('large', 'trailingicon');
    }
  }
}

.mc-button {
  position: relative;
  height: 100%;
  display: inline-flex;
  align-items: center;

  button,
  a,
  .link-button {
    border-style: var(--mds_core_button_border-style);
    border-width: var(--mds_core_button_border-width);
    border-radius: var(--mds_core_button_border-radius);
    box-shadow: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    text-decoration: none;
    transition-duration: var(--mds_core_button_transition-duration);
    transition-property: var(--mds_core_button_transition-properties);
    transition-timing-function: var(--mds_core_button_transition-timing);

    // states
    &.hover,
    &:hover {
      cursor: pointer;
    }

    // use outline and focus on keyboard navigation only
    &:focus {
      outline: none;
    }

    &:focus:not(:focus-visible) {
      box-shadow: none !important;
    }

    &.focus,
    &:focus-visible {
      @include mds-glow-only-on-keyboard-nav($inset: false);
    }

    // justifyitems
    &.items-center .mc-text-and-icon {
      justify-content: center;
    }

    &.items-left .mc-text-and-icon {
      justify-content: left;
    }

    &.items-right .mc-text-and-icon {
      justify-content: right;
    }

    &.items-space-between .mc-text-and-icon {
      justify-content: space-between;
    }
  }

  // variants
  &.primary-filled {
    @include apply-button-variant-appearance('primary', 'filled');
  }

  &.primary-outlined {
    @include apply-button-variant-appearance('primary', 'outlined');
  }

  &.primary-plain {
    @include apply-button-variant-appearance('primary', 'plain');
  }

  &.secondary-filled {
    @include apply-button-variant-appearance('secondary', 'filled');
  }

  &.secondary-outlined {
    @include apply-button-variant-appearance('secondary', 'outlined');
  }

  &.secondary-plain {
    @include apply-button-variant-appearance('secondary', 'plain');
  }

  &.neutral-filled {
    @include apply-button-variant-appearance('neutral', 'filled');
  }

  &.neutral-outlined {
    @include apply-button-variant-appearance('neutral', 'outlined');
  }

  &.neutral-plain {
    @include apply-button-variant-appearance('neutral', 'plain');
  }

  &.inverse-filled {
    @include apply-button-variant-appearance('inverse', 'filled');
  }

  &.inverse-outlined {
    @include apply-button-variant-appearance('inverse', 'outlined');
  }

  &.inverse-plain {
    @include apply-button-variant-appearance('inverse', 'plain');
  }

  &.error-filled {
    @include apply-button-variant-appearance('error', 'filled');
  }

  &.error-outlined {
    @include apply-button-variant-appearance('error', 'outlined');
  }

  &.error-plain {
    @include apply-button-variant-appearance('error', 'plain');
  }

  // fits
  &.small {
    @include apply-button-fit('small');
  }

  &.medium {
    @include apply-button-fit('medium');
  }

  &.large {
    @include apply-button-fit('large');
  }

  // loading
  &.loading {
    .mc-text-and-icon {
      visibility: hidden;
    }

    .loading-icon {
      align-items: center;
      bottom: 0;
      display: flex;
      justify-content: center;
      left: 0;
      position: absolute;
      top: 0;
      width: 100%;
    }
  }

  // icon only button
  &.icon-button {
    button,
    a {
      padding-left: 0;
      padding-right: 0;
    }

    .label {
      display: none;
    }
  }

  &.border-none {
    button,
    a {
      border-color: transparent;
    }
  }
}
