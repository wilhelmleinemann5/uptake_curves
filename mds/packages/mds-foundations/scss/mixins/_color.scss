@mixin mds-generate-color-properties($appearance, $variant, $type) {
  & {
    // type = border | background | text | on-background
    // value = neutral_default | neutral_weakest | success_weak ...
    // usage: @include generate-color-properties('success', 'weak', 'text);
    $property: '';
    @if ($type == 'border') {
      $property: 'border-color';
    } @else if ($type == 'background') {
      $property: 'background-color';
    } @else if ($type == 'text' or $type == 'on-background') {
      $property: 'color';
    }

    #{$property}: var(--mds_brand_appearance_#{$appearance}_#{$variant}_#{$type}-color);
  }
}

@mixin mds-generate-color-classes($appearance, $variants, $type) {
  // type = border | background | text | on-background
  // appearance = neutral | primary | secondary | info | error | warning | success
  // variants = 'default' | 'subtle' | 'alt' | 'weakest' | 'weak' | 'strong' | 'strongest' | 'inverse'

  @each $variant in $variants {
    @if $variant == 'default' {
      .mds-#{$appearance}__#{$type}-color {
        /* 
        @name: mds-#{$appearance}__#{$type}-color
        @category: Colors
        @usage: 
        Use mds-#{$appearance}__#{$type}-color class to get the #{$appearance} color for #{$type}.
        @example:
        <div class="mds-#{$appearance}__#{$type}-color">#{$type} color in #{$appearance} appearance</div>
        */
        @include mds-generate-color-properties($appearance, $variant, $type);
      }
    } @else {
      .mds-#{$appearance}--#{$variant}__#{$type}-color {
        /* 
        @name: mds-#{$appearance}--#{$variant}__#{$type}-color
        @category: Colors
        @usage: 
        Use mds-#{$appearance}--#{$variant}__#{$type}-color class to get the #{$appearance} #{$variant} color for #{$type}.
        @example:
        <div class="mds-#{$appearance}--#{$variant}__#{$type}-color">#{$type} color in #{$appearance} #{$variant} appearance</div>
        */
        @include mds-generate-color-properties($appearance, $variant, $type);
      }
    }
  }
}

@mixin mds-generate-link-color-classes($appearance, $variants, $type) {
  // type = border | background | text | on-background
  // appearance = neutral | primary | secondary | info | error | warning | success
  // variants = 'default' | 'subtle' | 'alt' | 'weakest' | 'weak' | 'strong' | 'strongest' | 'inverse'

  @each $variant in $variants {
    @if $variant == 'default' {
      a.mds-#{$appearance}__#{$type}-color,
      a.mds-#{$appearance}__#{$type}-color:active,
      a.mds-#{$appearance}__#{$type}-color:visited {
        @include mds-generate-color-properties($appearance, $variant, $type);
      }
    } @else {
      a.mds-#{$appearance}--#{$variant}__#{$type}-color,
      a.mds-#{$appearance}--#{$variant}__#{$type}-color:active,
      a.mds-#{$appearance}--#{$variant}__#{$type}-color:visited {
        @include mds-generate-color-properties($appearance, $variant, $type);
      }
    }
  }
}
